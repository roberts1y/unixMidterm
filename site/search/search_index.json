{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Midterm Review: Introduction to UNIX and Shell Programming","text":""},{"location":"#key-unix-concepts","title":"Key UNIX Concepts","text":"<ul> <li>UNIX: A family of operating systems with a unified file system, kernel, processes, and shell.</li> <li>Connecting to Virtual Machine:</li> <li>Use <code>ssh</code>, Windows Terminal, or PuTTY/MobaXTerm.</li> <li>Shells Available:</li> <li>BASH, C-shell, T-shell, etc.  </li> <li>Usage: Interpret typed commands and run them.</li> </ul>"},{"location":"#command-line-basics","title":"Command Line Basics","text":"<ul> <li>Useful Commands:</li> <li><code>finger [loginID]</code>: Find user info.</li> <li><code>man [command]</code>: Open manual page.</li> <li><code>pwd</code>: Print working directory.</li> <li><code>ls</code>: List directory contents.</li> <li><code>mkdir</code> / <code>rmdir</code>: Create or remove directories.</li> <li><code>rm filename</code>: Remove a file.</li> <li>Vim Editor Basics:</li> <li>Modes: Insert, Command, Last line.</li> <li>Commands:<ul> <li><code>i</code>: Enter Insert mode.</li> <li><code>Esc</code>: Return to Command mode.</li> <li><code>:wq</code>: Save and quit.</li> </ul> </li> <li>Nano Editor Basics: No modes.  </li> <li><code>CTRL + O</code>: Save, <code>CTRL + X</code>: Exit.</li> </ul>"},{"location":"#permissions-and-directory-management","title":"Permissions and Directory Management","text":"<ul> <li>File and Directory Permissions:</li> <li><code>chmod</code> to change permissions.</li> <li>Read (r), Write (w), Execute (x).</li> <li>Permissions Application:</li> <li>Files: Controls reading, editing, and executing.</li> <li>Directories: Controls listing contents and access.</li> <li>Octal Notation for Permissions:</li> <li>User: 4 (read), 2 (write), 1 (execute).</li> </ul>"},{"location":"#shell-variables","title":"Shell Variables","text":"<ul> <li>Variable Types:</li> <li>Local (restricted to shell) and Global/Exported (available to child processes).</li> <li>Creating Variables:</li> <li><code>myVar=\"value\"</code> </li> <li>Access: <code>echo $myVar</code></li> <li>Exporting: <code>export MYVAR</code></li> </ul>"},{"location":"#wildcards-and-scripts","title":"Wildcards and Scripts","text":"<ul> <li>Wildcards:</li> <li><code>*</code>: Matches 0+ characters.</li> <li><code>?</code>: Matches 1 character.</li> <li><code>[abc]</code>: Matches one character from set.</li> <li><code>{word1,word2}</code>: Matches listed words.</li> <li>Shell Scripts:</li> <li>Store and execute commands sequentially.</li> <li>Start a script: <code>bash     ./scriptname     chmod +x scriptname</code></li> <li>First line: <code>#!/bin/bash</code></li> </ul>"},{"location":"#conditionals-and-loops","title":"Conditionals and Loops","text":"<ul> <li>Conditionals:</li> <li><code>if</code>, <code>elif</code>, <code>else</code> structures.</li> <li>Comparisons: <code>-eq</code>, <code>-ne</code>, <code>-lt</code>, <code>-gt</code>.</li> <li>While Loop Example:   ```bash   num=0   while [[ $num -lt 3 ]]; do     echo $num     num=$(( num + 1 ))   done</li> </ul>"}]}